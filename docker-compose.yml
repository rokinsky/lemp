version: '3'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: php/Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: $APP_SERVICE_NAME
      SERVICE_TAGS: $APP_SERVICE_TAGS
    working_dir: /var/www
    volumes:
      - ./apps:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./apps:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  # MySQL Service
  db:
    image: mysql:8
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: $DB_MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_MYSQL_DATABASE
      MYSQL_USER: $DB_MYSQL_USER
      MYSQL_PASSWORD: $DB_MYSQL_PASSWORD
      SERVICE_NAME: $DB_SERVICE_NAME
      SERVICE_TAGS: $DB_SERVICE_TAGS
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/conf.cnf:/etc/mysql/conf.cnf
    networks:
      - app-network

  # Adminer Service
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-network

  # FTPD Service
  ftpd:
    image: stilliard/pure-ftpd
    container_name: pure-ftpd
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    volumes:
      - ./apps:/home/$FTP_USER_NAME/
    # uncomment for ssl/tls:
    #  - "./ftpd/ssl:/etc/ssl/private/"
    environment:
      PUBLICHOST: $FTP_PUBLIC_HOST
      FTP_USER_NAME: $FTP_USER_NAME
      FTP_USER_PASS: $FTP_USER_PASS
      FTP_USER_HOME: /home/$FTP_USER_NAME
    # also for ssl/tls:
    #  ADDED_FLAGS: "--tls=2"
    restart: always
    networks:
      - app-network

# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
